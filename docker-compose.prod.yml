version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://skillmatch_user:skillmatch_password@postgres:5432/skillmatch
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production}
      - ALLOWED_HOSTS=https://yourdomain.com,https://www.yourdomain.com
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - skillmatch-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=https://api.yourdomain.com
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - skillmatch-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=skillmatch
      - POSTGRES_USER=skillmatch_user
      - POSTGRES_PASSWORD=skillmatch_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - skillmatch-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - skillmatch-network

volumes:
  postgres_data:
  uploads_data:

networks:
  skillmatch-network:
    driver: bridge